[{"content":"關於部署的工具有很多，身為工程師的你一定聽過GitHub!\n為什麼用GitHub部署  因為免費(o) 因為用起來很親切，簡單又方便(o) 因為部署到生效的過程很快速(o) 因為部落格後面有GitHub域名很潮(x)  GitHub Pages是GitHub提供的免費靜態網頁託管服務\n雖然是免費，不過用起來體驗也很好\n那SEO表現呢? 這時候可以用ahrefs快速確認一下\nGitHub在網站權重跟外部連結數都有很好的表現\n拿medium來當對手的話呢\nGitHub 加十分 🙌\n跟另一個也是很常拿來建立部落格的平台，且SEO客製化程度較高的wordpress相比呢 GitHub 再加十分 🙌\n看起來是不錯的選擇唷！那麼來實作看看吧！\nGitHub Pages部署靜態網頁 GitHub Pages有兩種\n 專案型網址 https://username.github.io/reponame\n（一個帳號可以有很多個repo專案，每個專案都可以有一個靜態網頁） 帳號型網址 https://username.github.io\n（一個使用者帳號只會有一個，可以拿來經營個人網站）  第1種網址適合把Hugo這個部落格專案，備份到GitHub上(非部署)，執行步驟如下\n 新增一個GitHub Repo，Repo名自訂 cd到專案資料夾，輸入git init git branch -m main git add . git commit -m 'init project' # git msg 內容可自訂 git remote add origin \u0026lt;自訂repo網址\u0026gt;\n#如果電腦只有使用1組GitHub帳號，直接貼repo網址\n#如果電腦本身有多組GitHub帳號，確認@host名:git網址結構是否有調整正確，可回到上一篇確認\n這樣一來電腦裡的Hugo專案不見也不用擔心囉～之後還可以git clone下來  第2種適合作為部署部落格本身使用，執行步驟如下\n 新增一個GitHub Repo，Repo名為username.github.io(須完全符合) 在專案資料夾路徑下輸入 hugo，會生成靜態頁面檔案於public資料夾 cd public git init git branch -m main # option 修改分支名(GitHub 2020開始推行的預設名稱) git add . git config --local user.name aaa # option 如果有設定全域user.name就不用 git config --local user.email aaa@email.com # option 如果有設定全域user.email就不用 git commit -m 'deploy' # git msg 內容可自訂 git remote add origin \u0026lt;repo網址\u0026gt;\n#如果電腦只有使用1組GitHub帳號，直接貼repo網址\n#如果電腦本身有多組GitHub帳號，確認@host名:git網址結構是否有調整正確，可回到上一篇確認 git push -f --set-upstream origin main # 腳本執行會強制覆蓋之前的紀錄所以有加-f  好的，若依照順序有執行成功，可以開始寫腳本檔案了!\n自動化部屬腳本deploy.sh  在專案資料夾的根目錄建立deploy.sh檔，貼上下方文字 repo網址記得替換成自己的，option依照自己狀況調整即可  1 2 3 4 5 6 7 8 9 10 11 12 13  hugo cd public git init git branch -m main git add . # if you have global config setting, just skip 2 option commands below git config --local user.name aaa # option git config --local user.email aaa@email.com # option git commit -m \u0026#39;deploy\u0026#39; git remote add origin \u0026lt;repo網址\u0026gt; # if you have .ssh/config setting, remember to replace with right structure git push -f -u origin main cd -   未來要部署時，只需要進到專案資料夾，輸入deploy.sh 就可以一鍵部署囉！\n你問，不是一鍵按下去嗎？為什麼需要3秒呢？\nUm\u0026hellip;打./deploy.sh跟按enter也需要時間啦\u0026hellip;\n參考文章: 部署Hugo個人網頁至GitHub\n","date":"2021-12-26T00:00:00Z","image":"https://bacnotes.github.io/p/github-deploy-hugo/mohammad-rahmani-q1p2DrLBtko-unsplash_hu34ce0191b88a37780da4e3c1a288bda4_3436174_120x120_fill_q75_box_smart1.jpg","permalink":"https://bacnotes.github.io/p/github-deploy-hugo/","title":"只要3秒，使用GitHub一鍵部署你的Hugo部落格｜bacnotes備份筆記"},{"content":"Um\u0026hellip;在部署前卡到了 Github 多組帳號權限的問題\n如果你的電腦只有使用 1 組 GitHub 帳號，可以點下方連結直接到下一篇\n只要 3 秒，使用 GitHub 一鍵部署你的 Hugo 部落格\n為什麼要用一台電腦使用多組 GitHub 帳號 在後疫情時代，遠距工作變成時代趨勢\n工作時勢必會有 1 組公司用的 GitHub 帳號(或 GitLab 或\u0026hellip;其他的雲端協作平台)\n但自己在寫 side project 也會用到 1 組 GitHub 帳號\n先演練一下 1 台電腦可以使用 2 組 GitHub 帳號的情境\n聽起來好像很簡單，辦第 2 組 GitHub 帳號就好了吧（就跟 google 帳號一樣？\n但你在 GitHub 的新帳號開了一個 Repo，在編輯器的 terminal 依序輸入下方指令\n1 2 3 4 5 6  git init git add . git commit -m \u0026#39;some msg\u0026#39; git branch -M main git remote add origin \u0026#39;your repo\u0026#39; git push -u origin main   就會發現在最後一步跳出這個訊息\n ERROR: Permission to userB/repo.git denied to userA fatal: 無法讀取遠端版本庫。\n 要 commit 的時候，被最初註冊的 userA 帳號 deny\nUm\u0026hellip;啊！\n之前的帳號有設定一組對應的 SSH key 讓 GitHub 驗證身份\n應該是 SSH key 的問題吧？\n有 2 組帳號，生 2 組 key 應該就沒問題了吧！\n欸不對，我的 terminal 在 git push 的時候，怎麼知道哪組帳號對應哪個 SSH key\n上網查了一下相關文章，發現可以寫一個 config 來讓不同帳號對應各自的 key\n管理多組 SSH key 流程如下 aaa 為範例，可自由代入你的帳號\n 產生 SSH key ssh-keygen -t rsa -C \u0026quot;aaa@example.com\u0026quot; 決定要儲存的檔名(路徑) 在 Enter file in which to save the key (/Users/XXX/.ssh/id_rsa):\n後方填入 /Users/aaa/.ssh/id_rsa_aaa\n*如果沒有新的命名，就會覆蓋原本的 id_rsa Enter passphrase(看個人，可以直接 enter 不設定密碼) Enter same passphrase again(如果有設定要再輸入一次，沒有就直接 enter) 把對應的公鑰(id_rsa_aaa.pub 裡面的文字)新增到 GitHub 的 SSH key，官方圖文教學 在.ssh 目錄下，touch 一個 config(不用副檔名)  1 2 3 4 5  Host gh.aaa HostName github.com User aaa PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_aaa   把 key 加入管理 ssh-add ~/.ssh/id_rsa_aaa 嘗試連線看看對應 host 是否有生效ssh -T git@gh.aaa  Hi aaa! You\u0026rsquo;ve successfully authenticated, but GitHub does not provide shell access.\n   看到上方訊息表示有成功連線囉！\n第 2 個帳號照著上方步驟寫在同個 config 檔案即可\n1 2 3 4 5 6 7 8 9 10 11  Host gh.aaa HostName github.com User aaa PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_aaa Host gh.bbb HostName github.com User bbb PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_bbb   注意：經過上面的設定檔後，repo 的位置會從預定的 git@github.com:ooo/ooo.git 變成 git@gh.aaa:ooo/ooo.git\n後續在新增 repo 連結時需注意，不然可能吃不到 config 設定檔唷\n參考文章: [Git] 多個 SSH Key 與帳號的設定(Mac)\n","date":"2021-12-25T00:00:00Z","image":"https://bacnotes.github.io/p/github-ssh-key/maria-ziegler-jJnZg7vBfMs-unsplash_hu3d03a01dcc18bc5be0e67db3d8d209a6_39928_120x120_fill_q75_box_smart1.jpeg","permalink":"https://bacnotes.github.io/p/github-ssh-key/","title":"關於SSH key與多組GitHub帳號切換｜bacnotes備份筆記"},{"content":"為什麼工程師要寫部落格 身為一個專業的工程師，你也許會需要\n 一台筆電(o) 持續學習(o) 跟容量大的腦袋來備份知識(x)  Um\u0026hellip;工程師的世界永遠有追不完的技術\n自知腦容量沒有這麼大，記錄成部落格文字來比較可靠，而且\n 寫成部落格也有機會跟別人交流，也許還會有高手可以切磋(!\n 部落格架站選擇 - Jekyll, Hexo, Hugo, Gatsby(不是那個抓頭髮的) 除了 hugo 外還有很多人氣的靜態網站生成器 Jekyll (Ruby) / Hexo (JavaScript) / Gatsby (React)等，也有很多比較文\n [Day06] Jekyll vs Hexo vs Hugo Hexo Hugo Vuepress Gatsby 静态网站生成器的选择  因為Hugo號稱部屬最快的框架，用 Go 語言寫的，也許未來有時間會想學學看這個 google 工程師團隊開發的語言，而且時間就是金錢啊！就先選用這個了！\n安裝 Hugo 如果是用 Mac，直接 homebrew 下載  直接brew install hugo 如果沒用過 homebrew 套件管理軟體可以先下載homebrew 用 hugo version or hugo help 來檢查是否有新增成功  如果是用 Windows，可以使用 Chocolatey 下載   沒用過 ChocoLatey 套件管理工具的話，可以先參考這篇安裝說明\n用指令安裝程式\u0026ndash;Chocolatey\n  下載完後來安裝 Hugo\n基礎版是choco install hugo -confirm\n另一種 Sass/SCSS version 是 choco install hugo-extended -confirm\n這個看之後部落格選擇的主題，會使用到 Sass/SCSS 語法的就選後者\n  依照官方影片說明，在 C:\\下方新增 Hugo 資料夾\n    Hugo 資料夾下新增 Sites 跟 bin 資料夾(Sites 是專案資料夾，bin 是儲存執行檔案用) 到Hugo Releases 下載安裝檔，解壓縮完的檔案丟到 bin 資料夾 新增 window 開發環境變數，在變數 PATH 下新增一個值叫C:\\Hugo\\bin，讓全域都可以執行 hugo 命令 到其他資料夾用 hugo version or hugo help 來檢查是否有新增成功  新增網站的專案資料夾 ＊以下用example.com為部落格網址作為範例，這邊根據自己的網站名做修改即可(mac 跟 windows 流程大同小異)\n window 的使用者 cd 到C:\\Hugo\\Sites\u0026gt;，mac 的使用者 cd 到你設定的專案資料夾 執行hugo new site example.com  選擇與安裝喜歡的主題  到Hugo Themes找喜歡的主題 我選用的是 hugo-theme-stack \u0026ndash; git clone你喜歡的主題到theme資料夾\n\u0026ndash; 一開始我們的部落格裡面沒有內容，hugo-theme-stack 有提供範例，exampleSite資料夾，我們用這個來覆蓋專案資料夾看看實際部落格效果 \u0026ndash; 在 example.com 網站資料夾下執行 hugo server\n\u0026ndash; 網址列查看http://localhost:1313  哇真的出現了!好感人啊！\n現在只有自己可以看到，下一篇會介紹如何使用 GitHub 來部署我們的部落格\n只要 3 秒，使用 GitHub 一鍵部署你的 Hugo 部落格\n部署前記得先來客製一下部落格標題跟說明文字唷\n不太確定該怎麼設定嗎？那來看看這篇 如何設定 Hugo config 跟 Disqus 討論區\n參考文章: [Day07] Let\u0026rsquo;s Hugo!\n","date":"2021-12-23T00:00:00Z","image":"https://bacnotes.github.io/p/hugo-blog/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://bacnotes.github.io/p/hugo-blog/","title":"工程師的技術部落格要怎麼架？使用Hugo!｜bacnotes備份筆記"}]