<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on bacnotes備份筆記</title>
        <link>https://bacnotes.github.io/post/</link>
        <description>Recent content in Posts on bacnotes備份筆記</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <lastBuildDate>Sun, 26 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bacnotes.github.io/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>只要3秒，使用GitHub一鍵部署你的Hugo部落格｜bacnotes備份筆記</title>
        <link>https://bacnotes.github.io/p/github-deploy-hugo/</link>
        <pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://bacnotes.github.io/p/github-deploy-hugo/</guid>
        <description>&lt;img src="https://bacnotes.github.io/p/github-deploy-hugo/mohammad-rahmani-q1p2DrLBtko-unsplash.jpg" alt="Featured image of post 只要3秒，使用GitHub一鍵部署你的Hugo部落格｜bacnotes備份筆記" /&gt;&lt;p&gt;關於部署的工具有很多，身為工程師的你一定聽過GitHub!&lt;br&gt;
&lt;img src=&#34;./github_logo.png&#34; alt=&#34;github&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;h2 id=&#34;為什麼用github部署&#34;&gt;為什麼用GitHub部署&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;因為免費(o)&lt;/li&gt;
&lt;li&gt;因為用起來很親切，簡單又方便(o)&lt;/li&gt;
&lt;li&gt;因為部署到生效的過程很快速(o)&lt;/li&gt;
&lt;li&gt;因為部落格後面有GitHub域名很潮(x)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub Pages是GitHub提供的&lt;strong&gt;免費&lt;/strong&gt;靜態網頁託管服務&lt;br&gt;
雖然是免費，不過用起來體驗也很好&lt;br&gt;
那SEO表現呢?  這時候可以用&lt;a class=&#34;link&#34; href=&#34;https://ahrefs.com/website-authority-checker&#34;  title=&#34;ahrefs&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ahrefs&lt;/a&gt;快速確認一下&lt;/p&gt;
&lt;img src=&#34;./github.png&#34; alt=&#34;github&#34; width=&#34;500&#34;/&gt;
&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;在網站權重跟外部連結數都有很好的表現&lt;br&gt;
拿&lt;strong&gt;medium&lt;/strong&gt;來當對手的話呢&lt;br&gt;
&lt;img src=&#34;./medium.png&#34; alt=&#34;medium&#34; width=&#34;500&#34;/&gt;&lt;br&gt;
&lt;strong&gt;GitHub 加十分 🙌&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;跟另一個也是很常拿來建立部落格的平台，且SEO客製化程度較高的&lt;strong&gt;wordpress&lt;/strong&gt;相比呢
&lt;img src=&#34;./wordpress.png&#34; alt=&#34;wordpress&#34; width=&#34;500&#34;/&gt;&lt;br&gt;
&lt;strong&gt;GitHub 再加十分 🙌&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看起來是不錯的選擇唷！那麼來實作看看吧！&lt;/p&gt;
&lt;h2 id=&#34;github-pages部署靜態網頁&#34;&gt;GitHub Pages部署靜態網頁&lt;/h2&gt;
&lt;p&gt;GitHub Pages有兩種&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;專案型網址 &lt;a class=&#34;link&#34; href=&#34;https://username.github.io/reponame&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://username.github.io/reponame&lt;/a&gt;&lt;br&gt;
（一個帳號可以有很多個repo專案，每個專案都可以有一個靜態網頁）&lt;/li&gt;
&lt;li&gt;帳號型網址 &lt;a class=&#34;link&#34; href=&#34;https://username.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://username.github.io&lt;/a&gt;&lt;br&gt;
（一個使用者帳號只會有一個，可以拿來經營個人網站）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第1種網址適合把Hugo這個部落格專案，備份到GitHub上(非部署)，執行步驟如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新增一個GitHub Repo，Repo名自訂&lt;/li&gt;
&lt;li&gt;cd到專案資料夾，輸入&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -m main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &#39;init project&#39;&lt;/code&gt; # git msg 內容可自訂&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add origin &amp;lt;自訂repo網址&amp;gt;&lt;/code&gt;&lt;br&gt;
#如果電腦只有使用1組GitHub帳號，直接貼repo網址&lt;br&gt;
#如果電腦本身有多組GitHub帳號，確認@host名:git網址結構是否有調整正確，可回到&lt;a class=&#34;link&#34; href=&#34;https://bacnotes.github.io/p/github-ssh-key/&#34;  title=&#34;上一篇&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上一篇&lt;/a&gt;確認&lt;br&gt;
這樣一來電腦裡的Hugo專案不見也不用擔心囉～之後還可以git clone下來&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第2種適合作為部署部落格本身使用，執行步驟如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新增一個GitHub Repo，Repo名為&lt;code&gt;username.github.io&lt;/code&gt;(須完全符合)&lt;/li&gt;
&lt;li&gt;在專案資料夾路徑下輸入 &lt;code&gt;hugo&lt;/code&gt;，會生成靜態頁面檔案於public資料夾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd public&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -m main&lt;/code&gt; # option 修改分支名(GitHub 2020開始推行的預設名稱)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --local user.name aaa&lt;/code&gt; # option 如果有設定全域user.name就不用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --local user.email aaa@email.com&lt;/code&gt; # option 如果有設定全域user.email就不用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &#39;deploy&#39;&lt;/code&gt; # git msg 內容可自訂&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add origin &amp;lt;repo網址&amp;gt;&lt;/code&gt;&lt;br&gt;
#如果電腦只有使用1組GitHub帳號，直接貼repo網址&lt;br&gt;
#如果電腦本身有多組GitHub帳號，確認@host名:git網址結構是否有調整正確，可回到&lt;a class=&#34;link&#34; href=&#34;https://bacnotes.github.io/p/github-ssh-key/&#34;  title=&#34;上一篇&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上一篇&lt;/a&gt;確認&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -f --set-upstream origin main&lt;/code&gt; # 腳本執行會強制覆蓋之前的紀錄所以有加-f&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好的，若依照順序有執行成功，可以開始寫腳本檔案了!&lt;/p&gt;
&lt;h2 id=&#34;自動化部屬腳本deploysh&#34;&gt;自動化部屬腳本deploy.sh&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在專案資料夾的&lt;strong&gt;根目錄&lt;/strong&gt;建立deploy.sh檔，貼上下方文字&lt;/li&gt;
&lt;li&gt;repo網址記得替換成自己的，option依照自己狀況調整即可&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -m main 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# if you have global config setting, just skip 2 option commands below
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --local user.name aaa # option 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --local user.email aaa@email.com # option 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#39;deploy&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin &amp;lt;repo網址&amp;gt; # if you have .ssh/config setting, remember to replace with right structure
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -f -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;未來要部署時，只需要進到專案資料夾，輸入&lt;code&gt;deploy.sh&lt;/code&gt; 就可以一鍵部署囉！&lt;br&gt;
你問，不是一鍵按下去嗎？為什麼需要3秒呢？&lt;br&gt;
Um&amp;hellip;打&lt;code&gt;./deploy.sh&lt;/code&gt;跟按enter也需要時間啦&amp;hellip;&lt;/p&gt;
&lt;p&gt;參考文章:
&lt;a class=&#34;link&#34; href=&#34;https://ianjustin39.github.io/ianlife/build-blog/deploy_hugo_on_github/&#34;  title=&#34;部署Hugo個人網頁至GitHub&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;部署Hugo個人網頁至GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>關於SSH key與多組GitHub帳號切換｜bacnotes備份筆記</title>
        <link>https://bacnotes.github.io/p/github-ssh-key/</link>
        <pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://bacnotes.github.io/p/github-ssh-key/</guid>
        <description>&lt;img src="https://bacnotes.github.io/p/github-ssh-key/maria-ziegler-jJnZg7vBfMs-unsplash.jpeg" alt="Featured image of post 關於SSH key與多組GitHub帳號切換｜bacnotes備份筆記" /&gt;&lt;img src=&#34;./cat_white.png&#34; alt=&#34;white-cat-meme&#34; width=&#34;400&#34;/&gt;
&lt;p&gt;Um&amp;hellip;在部署前卡到了 Github 多組帳號權限的問題&lt;br&gt;
如果你的電腦只有使用 1 組 GitHub 帳號，可以點下方連結直接到下一篇&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://bacnotes.github.io/p/github-deploy-hugo&#34;  title=&#34;[只要3秒，使用GitHub一鍵部署你的Hugo部落格&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;只要 3 秒，使用 GitHub 一鍵部署你的 Hugo 部落格&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;為什麼要用一台電腦使用多組-github-帳號&#34;&gt;為什麼要用一台電腦使用多組 GitHub 帳號&lt;/h2&gt;
&lt;p&gt;在&lt;strong&gt;後疫情時代&lt;/strong&gt;，遠距工作變成時代趨勢&lt;br&gt;
工作時勢必會有 1 組公司用的 GitHub 帳號(或 GitLab 或&amp;hellip;其他的雲端協作平台)&lt;br&gt;
但自己在寫 side project 也會用到 1 組 GitHub 帳號&lt;br&gt;
先演練一下 1 台電腦可以使用 2 組 GitHub 帳號的情境&lt;br&gt;
聽起來好像很簡單，辦第 2 組 GitHub 帳號就好了吧（就跟 google 帳號一樣？&lt;br&gt;
但你在 GitHub 的新帳號開了一個 Repo，在編輯器的 terminal 依序輸入下方指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#39;some msg&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch -M main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin &amp;#39;your repo&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;就會發現在最後一步跳出這個訊息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ERROR: Permission to userB/repo.git denied to userA
fatal: 無法讀取遠端版本庫。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要 commit 的時候，被最初註冊的 userA 帳號 deny&lt;/p&gt;
&lt;p&gt;Um&amp;hellip;啊！&lt;br&gt;
&lt;img src=&#34;./cat.jpg&#34; alt=&#34;cat-meme&#34; width=&#34;400&#34;/&gt;&lt;br&gt;
之前的帳號有設定一組對應的 SSH key 讓 GitHub 驗證身份&lt;br&gt;
應該是 SSH key 的問題吧？&lt;br&gt;
有 2 組帳號，生 2 組 key 應該就沒問題了吧！&lt;br&gt;
欸不對，我的 terminal 在 git push 的時候，怎麼知道哪組帳號對應哪個 SSH key&lt;br&gt;
上網查了一下相關文章，發現可以寫一個 config 來讓不同帳號對應各自的 key&lt;/p&gt;
&lt;h2 id=&#34;管理多組-ssh-key-流程如下&#34;&gt;管理多組 SSH key 流程如下&lt;/h2&gt;
&lt;p&gt;aaa 為範例，可自由代入你的帳號&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;產生 SSH key &lt;code&gt;ssh-keygen -t rsa -C &amp;quot;aaa@example.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;決定要儲存的檔名(路徑)
在 Enter file in which to save the key (/Users/XXX/.ssh/id_rsa):&lt;br&gt;
後方填入 &lt;code&gt;/Users/aaa/.ssh/id_rsa_aaa&lt;/code&gt;&lt;br&gt;
*如果沒有新的命名，就會覆蓋原本的 id_rsa&lt;/li&gt;
&lt;li&gt;Enter passphrase(看個人，可以直接 enter 不設定密碼)&lt;/li&gt;
&lt;li&gt;Enter same passphrase again(如果有設定要再輸入一次，沒有就直接 enter)&lt;/li&gt;
&lt;li&gt;把對應的公鑰(id_rsa_aaa.pub 裡面的文字)新增到 GitHub 的 SSH key，&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方圖文教學&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在.ssh 目錄下，touch 一個 config(不用副檔名)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host gh.aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HostName github.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PreferredAuthentications publickey
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IdentityFile ~/.ssh/id_rsa_aaa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;把 key 加入管理 &lt;code&gt;ssh-add ~/.ssh/id_rsa_aaa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;嘗試連線看看對應 host 是否有生效&lt;code&gt;ssh -T git@gh.aaa&lt;/code&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi aaa! You&amp;rsquo;ve successfully authenticated, but GitHub does not provide shell access.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;看到上方訊息表示有成功連線囉！&lt;br&gt;
第 2 個帳號照著上方步驟寫在同個 config 檔案即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host gh.aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HostName github.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PreferredAuthentications publickey
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IdentityFile ~/.ssh/id_rsa_aaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host gh.bbb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HostName github.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User bbb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PreferredAuthentications publickey
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IdentityFile ~/.ssh/id_rsa_bbb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意：經過上面的設定檔後，repo 的位置會從預定的
&lt;a class=&#34;link&#34; href=&#34;mailto:git@github.com&#34; &gt;git@github.com&lt;/a&gt;:ooo/ooo.git 變成 &lt;a class=&#34;link&#34; href=&#34;mailto:git@gh.aaa&#34; &gt;git@gh.aaa&lt;/a&gt;:ooo/ooo.git&lt;br&gt;
後續在新增 repo 連結時需注意，不然可能吃不到 config 設定檔唷&lt;/p&gt;
&lt;p&gt;參考文章:
&lt;a class=&#34;link&#34; href=&#34;https://dotblogs.com.tw/as15774/2018/04/30/174737&#34;  title=&#34;[[Git] 多個SSH Key與帳號的設定(Mac)&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[Git] 多個 SSH Key 與帳號的設定(Mac)&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>工程師的技術部落格要怎麼架？使用Hugo!｜bacnotes備份筆記</title>
        <link>https://bacnotes.github.io/p/hugo-blog/</link>
        <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://bacnotes.github.io/p/hugo-blog/</guid>
        <description>&lt;img src="https://bacnotes.github.io/p/hugo-blog/helena-hertz-wWZzXlDpMog-unsplash.jpg" alt="Featured image of post 工程師的技術部落格要怎麼架？使用Hugo!｜bacnotes備份筆記" /&gt;&lt;h2 id=&#34;為什麼工程師要寫部落格&#34;&gt;為什麼工程師要寫部落格&lt;/h2&gt;
&lt;p&gt;身為一個&lt;strong&gt;專業的工程師&lt;/strong&gt;，你也許會需要&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一台筆電(o)&lt;/li&gt;
&lt;li&gt;持續學習(o)&lt;/li&gt;
&lt;li&gt;跟容量大的腦袋來備份知識(x)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Um&amp;hellip;工程師的世界永遠有追不完的技術&lt;br&gt;
自知腦容量沒有這麼大，記錄成部落格文字來比較可靠，而且&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;寫成部落格也有機會跟別人交流，也許還會有高手可以切磋(!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;部落格架站選擇---jekyll-hexo-hugo-gatsby不是那個抓頭髮的&#34;&gt;部落格架站選擇 - Jekyll, Hexo, Hugo, Gatsby(不是那個抓頭髮的)&lt;/h2&gt;
&lt;p&gt;除了 hugo 外還有很多人氣的靜態網站生成器 &lt;a class=&#34;link&#34; href=&#34;https://jekyllrb.com/&#34;  title=&#34;Jekyll (Ruby)&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jekyll (Ruby)&lt;/a&gt; / &lt;a class=&#34;link&#34; href=&#34;https://hexo.io/zh-tw/&#34;  title=&#34;Hexo (JavaScript)&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hexo (JavaScript)&lt;/a&gt; / &lt;a class=&#34;link&#34; href=&#34;https://www.gatsbyjs.com/&#34;  title=&#34;Gatsby (React)&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gatsby (React)&lt;/a&gt;等，也有很多比較文&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/m/articles/10269253&#34;  title=&#34;[Day06] Jekyll vs Hexo vs Hugo&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[Day06] Jekyll vs Hexo vs Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.tangruiping.com/post/hexo-hugo-vuepress-gatsby.html&#34;  title=&#34;Hexo Hugo Vuepress Gatsby静态网站生成器的选择&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hexo Hugo Vuepress Gatsby 静态网站生成器的选择&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因為&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/installing/&#34;  title=&#34;Hugo&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt;號稱部屬最快的框架，用 Go 語言寫的，也許未來有時間會想學學看這個 google 工程師團隊開發的語言，而且時間就是金錢啊！就先選用這個了！&lt;/p&gt;
&lt;h2 id=&#34;安裝-hugo&#34;&gt;安裝 Hugo&lt;/h2&gt;
&lt;h3 id=&#34;如果是用-mac直接-homebrew-下載&#34;&gt;如果是用 Mac，直接 homebrew 下載&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接&lt;code&gt;brew install hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果沒用過 homebrew 套件管理軟體可以先下載&lt;a class=&#34;link&#34; href=&#34;https://brew.sh/&#34;  title=&#34;homebrew&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;hugo version&lt;/code&gt; or &lt;code&gt;hugo help&lt;/code&gt; 來檢查是否有新增成功&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;如果是用-windows可以使用-chocolatey-下載&#34;&gt;如果是用 Windows，可以使用 Chocolatey 下載&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;沒用過 ChocoLatey 套件管理工具的話，可以先參考這篇安裝說明&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/articles/10242201&#34;  title=&#34;用指令安裝程式--Chocolatey&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;用指令安裝程式&amp;ndash;Chocolatey&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下載完後來安裝 Hugo&lt;br&gt;
基礎版是&lt;code&gt;choco install hugo -confirm&lt;/code&gt;&lt;br&gt;
另一種 Sass/SCSS version 是 &lt;code&gt;choco install hugo-extended -confirm&lt;/code&gt;&lt;br&gt;
這個看之後部落格選擇的主題，會使用到 Sass/SCSS 語法的就選後者&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依照官方影片說明，在 C:\下方新增 Hugo 資料夾&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;ul&gt;
&lt;li&gt;Hugo 資料夾下新增 Sites 跟 bin 資料夾(Sites 是專案資料夾，bin 是儲存執行檔案用)&lt;/li&gt;
&lt;li&gt;到&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases&#34;  title=&#34;Hugo Releases&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Releases&lt;/a&gt; 下載安裝檔，解壓縮完的檔案丟到 bin 資料夾&lt;/li&gt;
&lt;li&gt;新增 window 開發環境變數，在變數 PATH 下新增一個值叫&lt;code&gt;C:\Hugo\bin&lt;/code&gt;，讓全域都可以執行 hugo 命令&lt;/li&gt;
&lt;li&gt;到其他資料夾用 &lt;code&gt;hugo version&lt;/code&gt; or &lt;code&gt;hugo help&lt;/code&gt; 來檢查是否有新增成功&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;新增網站的專案資料夾&#34;&gt;新增網站的專案資料夾&lt;/h3&gt;
&lt;p&gt;＊以下用&lt;code&gt;example.com&lt;/code&gt;為部落格網址作為範例，這邊根據自己的網站名做修改即可(mac 跟 windows 流程大同小異)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;window 的使用者 cd 到&lt;code&gt;C:\Hugo\Sites&amp;gt;&lt;/code&gt;，mac 的使用者 cd 到你設定的專案資料夾&lt;/li&gt;
&lt;li&gt;執行&lt;code&gt;hugo new site example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;選擇與安裝喜歡的主題&#34;&gt;選擇與安裝喜歡的主題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;到&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Themes&lt;/a&gt;找喜歡的主題&lt;/li&gt;
&lt;li&gt;我選用的是 hugo-theme-stack
&amp;ndash; &lt;code&gt;git clone&lt;/code&gt;你喜歡的主題到&lt;code&gt;theme&lt;/code&gt;資料夾&lt;br&gt;
&amp;ndash; 一開始我們的部落格裡面沒有內容，hugo-theme-stack 有提供範例，&lt;code&gt;exampleSite&lt;/code&gt;資料夾，我們用這個來覆蓋專案資料夾看看實際部落格效果
&amp;ndash; 在 example.com 網站資料夾下執行 &lt;code&gt;hugo server&lt;/code&gt;&lt;br&gt;
&amp;ndash; 網址列查看&lt;code&gt;http://localhost:1313&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;./screenshot.png&#34; alt=&#34;drawing&#34; width=&#34;600&#34;/&gt;
&lt;p&gt;哇真的出現了!好感人啊！&lt;br&gt;
現在只有自己可以看到，下一篇會介紹如何使用 GitHub 來部署我們的部落格&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://bacnotes.github.io/p/github-deploy-hugo/&#34;  title=&#34;只要3秒，使用GitHub一鍵部署你的Hugo部落格&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;只要 3 秒，使用 GitHub 一鍵部署你的 Hugo 部落格&lt;/a&gt;&lt;br&gt;
部署前記得先來客製一下部落格標題跟說明文字唷&lt;br&gt;
不太確定該怎麼設定嗎？那來看看這篇 &lt;a class=&#34;link&#34; href=&#34;https://bacnotes.github.io/p/hugo-config-and-disqus/&#34;  title=&#34;如何設定Hugo config跟Disqus討論區&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何設定 Hugo config 跟 Disqus 討論區&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;參考文章: &lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/m/articles/10269925&#34;  title=&#34;[Day07] Let&amp;#39;s Hugo!&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[Day07] Let&amp;rsquo;s Hugo!&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
